services:
  postgres:
    image: postgres:15
    container_name: daily_stock_db
    environment:
      POSTGRES_DB: daily_stock
      POSTGRES_USER: daily_stock_user
      POSTGRES_PASSWORD: daily_stock_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - daily_stock_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U daily_stock_user -d daily_stock" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: daily_stock_redis
    ports:
      - "6379:6379"
    networks:
      - daily_stock_network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: daily_stock_backend
    environment:
      DATABASE_URL: postgresql://daily_stock_user:daily_stock_password@postgres:5432/daily_stock
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: your-secret-key-change-this-in-production
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 1440
      ENVIRONMENT: development
      DEBUG: true
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - daily_stock_network
    restart: unless-stopped

volumes:
  postgres_data:


networks:
  daily_stock_network:
    driver: bridge
